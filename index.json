[{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/tags/misskey/","section":"Tags","summary":"","title":"Misskey","type":"tags"},{"content":" この記事はMisskey Advent Calendar 2024 12日目の記事です。 はじめに # はじめましての方ははじめまして、そうでない方はこんにちは。サンセット(@sunset@mi.sunset0916.net)です。\nさんせすきーという小規模なMisskeyサーバーの管理者をやっている美少女 [要出典] です。\nそういえば最近2周年を迎えました。女装するとサーバーが安定するって話は本当だったんですね。\nさて今回はMisskey Hubを経由するMisskeyへの共有リンクについてひとつずつ触っていこうと思います。\n今回はMisskey Hubの以下のドキュメントを実際に触りながら確認していくことが主な内容です。\n共有フォーム | Misskey Hub\n内容はほぼこのままです。触りながら覚えることが目的なので内容には期待しないで（\n基本の共有 # これが使えるだけで基本の共有はできてしまいます。\nMisskey Hubほんまにありがとう。\n名前 説明 title 本文の先頭に挿入されるタイトル text 本文 url 本文の末尾に挿入されるURL https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net Misskeyで共有 リプライ(返信)する # 自分の投稿に返信がほしいときなどに使えるかも…？\n名前 説明 replyUri リプライ先のURL https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;replyUri=https://mi.sunset0916.net/notes/9w2uw7v597 サンセットの投稿に返信 ちなみに該当ノート以外のサーバーからだとタイトルや本文などがうまく反映されません。どうして？\nRenote(引用)する # 自分の投稿を引用してほしいときなどに。\nちなみに、引用画面で何も入力しないで投稿するとRenote扱いにすることができます。\n公開範囲を変えてRenoteするときなどに使われる手法ですね。\n名前 説明 renoteUri Renoteする投稿のURL https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;renoteUri=https://mi.sunset0916.net/notes/9w2uw7v597 サンセットの投稿を引用 引用では該当サーバー以外からでもタイトルや本文などはちゃんと反映されました。よかった。\n公開範囲を指定する # 共有リンクで公開範囲を指定する場面があまり思いつきませんが、内容に応じてデフォルトの公開範囲を決めておくとかそういう使い方ですかね？\n名前 説明 visibility public(パブリック), home(ホーム), followers(フォロワー), specified(ダイレクト) localOnly 0(連合に公開), 1(ローカルのみ) visibleAccts 対象ユーザーacct(カンマ区切り) acctは、@username@hostの形式のことを指します。\nパブリック # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;visibility=public パブリックで投稿 ホーム # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;visibility=home ホームで投稿 フォロワーのみ # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;visibility=followers フォロワーのみで投稿 ローカルのみ # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;localOnly=1 ローカルのみで投稿 ダイレクト # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;visibility=specified\u0026amp;visibleAccts=@sunset@mi.sunset0916.net サンセットにダイレクトで投稿 サーバー選択画面におすすめサーバーを出す # Misskey Hub経由の共有では、サーバー選択画面におすすめサーバーを出せるようです。\n名前 説明 manualInstance おすすめするMisskeyサーバーのドメイン https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;manualInstance=mi.sunset0916.net さんせすきーがおすすめされる(なお招待制) 応用 # これまでに紹介したパラメーターは同時に使用することで組み合わせて使うことができます。\nいくつか応用例を作ってみましょうか。\n特定のノートをフォロワーのみにRenoteする # https://misskey-hub.net/share/?renoteUri=https://mi.sunset0916.net/notes/9w2uw7v597\u0026amp;visibility=followers ノートをフォロワーのみにRenote 特定のノートにダイレクトで返信(+おすすめサーバー) # https://misskey-hub.net/share/?title=タイトル\u0026amp;text=本文\u0026amp;url=https://misskey-hub.net\u0026amp;replyUri=https://mi.sunset0916.net/notes/9w2uw7v597\u0026amp;visibility=specified\u0026amp;visibleAccts=@sunset@mi.sunset0916.net\u0026amp;manualInstance=mi.sunset0916.net サンセットの投稿にダイレクトで返信 まとめ # 内容がとても薄いので以下の2点ですね。\nMisskey Hubの共有URLを使っていろいろ試した それぞれのパラメーターは組み合わせることができた 公式ドキュメントには例がなく実際の動きも確認できないため、例を作って動作の確認もできてよかったかなと思います。\nおわりに # 今回はMisskeyの共有リンクの機能をひと通り触ってみました。\n共有リンクだけでRenoteや返信、公開範囲の指定などができてとても便利だなと感じました。\nブログの共有ボタンやゲームのリザルト共有など、Misskeyに共有する機能を作る際は活用してみては？\nちなみにこの下にある各SNSへの共有ボタンにもMisskey Hub経由の共有リンクが活用されています。是非使ってみてね。\nそれでは、また次回。\n","date":"2024/12/12","externalUrl":null,"permalink":"/blog/2024/12/12/misskey-advent-2024/","section":"ブログ","summary":"この記事はMisskey Advent Calendar 2024 12日目の記事です","title":"Misskey Hubの共有リンクで自由自在に共有する","type":"blog"},{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2024/12/12","externalUrl":null,"permalink":"/","section":"サンセットのウェブサイト","summary":"","title":"サンセットのウェブサイト","type":"page"},{"content":" はじめに # 「そこに無ければ無いですね」でおなじみの100円ショップのDAISOからは度々競合をコスパで破壊するような製品が発売されたりしますが、今回購入したApple Pencil互換ペンも相当な実力なので紹介したいと思います。\n買ったもの # 今回購入したのはこちらの「静電容量式充電タッチペン for iPad」です。\n開封すると中身はこんな感じ。\n写真に写っているものの他には簡単な説明書があるくらいで、充電ケーブルなどはありませんでした。\n本体には充電端子保護のためにキャップが付いていますが、iPadにくっつけたときに浮いて取れやすくなるので外しておいたほうが使いやすいですね。\n純正Apple Pencilとの比較 # 定価21,800円の純正Apple Pencil(第2世代)と比較していきます。\n見た目の差はこんな感じ。\nサイズ感や磁石でくっつく面の感じはだいたい同じでした。\n重量は全く違い、純正はずっしり思いのに対して、互換ペンはプラスチックのような軽さで、搭載している機能の差なのかそこには大きな差がありました。\nDAISOの互換ペンは他社から出ている2〜3,000円クラスの互換ペンと基本的に同じ機能で、書き心地も純正ほどの良さはないですが悪くありませんでした。\nペンを試しに買ってみる目的やサブ、予備のペンに最適ですね。\n使ってみた # 適当にペンに対応したアプリを使って試しがきをしてみました。\nフリーボードで絵を描くもんじゃないですね。\n真剣にイラストを描く場合は筆圧対応の純正ペンが必要なことも多いですが、傾き検知のみで問題ない人はこのペンでも十分やっていけると思います。\nおわりに # 今回はDAISOのペンが気になったので購入してみた話でした。\niPadを持っていてスタイラスペンを持っていない人に渡して気に入ったらプレゼントする企画をやってもいいくらい安価で質も高い製品で驚きました。\niPad利用者の方は一度試しにお近くのDAISOで購入してみてはいかがでしょうか。\nそれでは、また次回。\n","date":"2024/10/01","externalUrl":null,"permalink":"/blog/2024/10/01/daiso-ipad-pencil/","section":"ブログ","summary":"これで1,100円は安すぎ","title":"DAISOから1,100円で発売されたApple Pencil互換ペンを買ってみた話","type":"blog"},{"content":"","date":"2024/10/01","externalUrl":null,"permalink":"/tags/gadget/","section":"Tags","summary":"","title":"Gadget","type":"tags"},{"content":" はじめに # アクセスできるのにアクセスできない…\n私は自宅でとあるMisskeyサーバーを運営しているのですが、一時期から特定のサーバーに配送ができない問題が発生し、困ったことがありました。\n今回はその現象と改善策についてです。\n問題の内容 # どのような問題が起こったのか内容を書いていきます。\n特定のサーバーに配送ができない pingは通る(DNSは解決されている) 他サーバー経由で拡散された投稿が相手のサーバーに到達すると一時的に配送が通る 疎通が確認されても少し時間があくとすぐ配送が止まる 相手サーバーから自サーバーへの配送は普通に通る 相手のサーバーには同じ回線からHTTPSで普通にアクセスできる(常時) こんな感じで謎が多い状態でした。\nソフトウェア的な問題があれば配送自体ができないだろうし、相手サーバーにアクセスできないのであればpingは通らないはず。\n何が起きているか確認するためにエラーの内容を確認しました。\nAbortError: The operation was aborted. at abort (file:///home/misskey/misskey/node_modules/.pnpm/node-fetch@3.3.2/node_modules/node-fetch/src/index.js:70:18) at EventTarget.abortAndFinalize (file:///home/misskey/misskey/node_modules/.pnpm/node-fetch@3.3.2/node_modules/node-fetch/src/index.js:89:4) at [nodejs.internal.kHybridDispatch] (node:internal/event_target:807:20) at EventTarget.dispatchEvent (node:internal/event_target:742:26) at abortSignal (node:internal/abort_controller:369:10) at AbortController.abort (node:internal/abort_controller:391:5) at Timeout._onTimeout (file:///home/misskey/misskey/packages/backend/built/core/HttpRequestService.js:118:24) at listOnTimeout (node:internal/timers:573:17) at process.processTimers (node:internal/timers:514:7) うーんタイムアウト。\nということは通信周りの問題か？\n謎は深まるばかりです。\n試したこと # 以下全て試しても改善しなかったものです。\n自動投稿BOTで配送し続ける # 一時的に配送が通るようになったときにしばらく配送をしないと止まることがわかっていたので、配送し続けたらどうかと試しましたが、それでもしばらくしたら止まり、意味はありませんでした。\nDNSサーバーを変えてみる # 使用するDNSサーバーを変えてみましたが、そもそもDNSはちゃんと解決されていたので変わりませんでした。\nソフトウェアを更新してみる # もしかしたらソフトウェアの問題の可能性もあるかもと最新版がリリースされたタイミングでアップデートしましたが、ソフトウェアの問題ではなかったようで変わりませんでした。\nサーバー機を変えてみる # インストールされたOSの問題や、サーバー機本体の問題の可能性も考え、サーバー機そのものも変えてみましたが、関係なかったようで変わりませんでした。\n解決策 # いろいろ試した結果、使用しているネット回線の相性が悪いのではないかという仮説が立ち、それを検証するために外部のサーバーにフォワードプロキシサーバーを構築しました。\n使用したサーバーはOCI無料枠のVM.Standard.E2.1.Microで、Squidを使用しています。\n配送を外部サーバー経由にした結果、配送が止まることが一切なくなり、これらの問題はあっさり解決してしまいました。\nおわりに # いろいろと頭を悩ませていた問題でしたが、相性という一番納得がいかない結果に終わりました。\nなんのためのプロトコルだよと思いつつ、こんなこともあるんだとブログに書き起こした次第です。\n今回の問題のおかげでOCIに手を出すこともできたのでポジティブにとらえていこうと思います。\nそれでは、また次回。\n","date":"2024/09/26","externalUrl":null,"permalink":"/blog/2024/09/26/ap-network-compatibility/","section":"ブログ","summary":"なんのためのプロトコルだよ","title":"ネット回線の相性が悪いとPingが通ってもActivityPubの配送は通らない","type":"blog"},{"content":" はじめに # 今更！？！？(2024年9月)\n先日、妹の部屋を掃除していたところ解約済みのベネッセの教材が大量に発掘され、そこにチャレンジパッド2が眠っていました。\n確かこれ改造できたよな…と電源を入れたところ普通に動いたので今回はこれで遊んでいきます。\n改造手順 # 改造とは言ってもやることはAPKファイルから野良アプリを入れてAndroidタブレットとして使えるようにするだけです。\nもっと高度なことを期待したオタクの君はここでブラウザバックしてどうぞ。\nAPKファイルを入れるだけとは言っても少し厄介なところがあるので順を追って解説していきます。\n今回使用する端末の情報\nチャレンジパッド2 (TAB-A03-BR2) ビルド番号 02.04.000 release-keys 初期化 # 初期化手順はベネッセ公式がわかりやすく解説しているのでそれを見てください。\nhttps://www.benesse.co.jp/member/helpdesk/close/process.html\n自分の使ってる機種がわからないよーって人にも親切なベネッセさん流石ですね。\nhttps://faq.benesse.co.jp/faq/show/40515\n初期化後はスタートボタンを絶対に押してはいけません。\nランチャーのアプリ一覧ボタンから設定アプリを起動してください。\nWi-Fiに接続 # Anrdoid 5.1なのでクイック設定(上部からスワイプ)からWi-Fiに接続できます。\n方法はここで解説するまでもないので割愛。\nUSBデバッグ許可 # 設定→タブレット情報→ビルド番号 を7回連打して開発者向けオプションを有効化します。\nその後、一つ前の画面から開発者向けオプションに入り、USBデバッグを有効にします。\nこのとき、必要に応じて「スリープモードにしない」の項目を有効にします。\n提供元不明アプリを許可 # USBデバッグを有効化できたらPCと接続し、ADBコマンドで弄っていきます。\n提供元不明のアプリを許可するには以下のコマンドを実行すれば良いみたいです。\nadb shell content update --uri content://settings/secure --where \u0026#39;name=\\\u0026#34;install_non_market_apps\\\u0026#34;\u0026#39; --bind value:i:1 …が、場合によっては以下のようなエラーでこれが使えないことがあります。\nError while accessing provider:settings android.database.sqlite.SQLiteException: no such column: install_non_market_apps (code 1): , while compiling: UPDATE secure SET value=? WHERE name=install_non_market_apps at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:181) at android.database.DatabaseUtils.readExceptionFromParcel(DatabaseUtils.java:137) at android.content.ContentProviderProxy.update(ContentProviderNative.java:568) at com.android.commands.content.Content$UpdateCommand.onExecute(Content.java:597) at com.android.commands.content.Content$Command.execute(Content.java:417) at com.android.commands.content.Content.main(Content.java:605) at com.android.internal.os.RuntimeInit.nativeFinishInit(Native Method) at com.android.internal.os.RuntimeInit.main(RuntimeInit.java:249) この状態でデータベースに登録されている設定項目を出してみると…\nRow: 0 _id=2, name=mock_location, value=0 Row: 1 _id=3, name=backup_enabled, value=0 Row: 2 _id=4, name=backup_transport, value=android/com.android.internal.backup.LocalTransport Row: 3 _id=5, name=mount_play_not_snd, value=1 Row: 4 _id=6, name=mount_ums_autostart, value=0 Row: 5 _id=7, name=mount_ums_prompt, value=1 Row: 6 _id=8, name=mount_ums_notify_enabled, value=1 Row: 7 _id=9, name=accessibility_script_injection, value=0 Row: 8 _id=10, name=accessibility_web_content_key_bindings, value=0x13=0x01000100; 0x14=0x01010100; 0x15=0x02000001; 0x16=0x02010001; 0x200000013=0x02000601; 0x200000014=0x02010601; 0x200000015=0x03020101; 0x200000016=0x03010201; 0x200000023=0x02000301; 0x200000024=0x02010301; 0x200000037=0x03070201; 0x200000038=0x03000701:0x03010701:0x03020701; Row: 9 _id=11, name=long_press_timeout, value=500 Row: 10 _id=12, name=touch_exploration_enabled, value=0 Row: 11 _id=13, name=speak_password, value=0 Row: 12 _id=14, name=accessibility_script_injection_url, value=https://ssl.gstatic.com/accessibility/javascript/android/AndroidVox_v1.js Row: 13 _id=15, name=lockscreen.disabled, value=1 Row: 14 _id=17, name=screensaver_activate_on_dock, value=0 Row: 15 _id=18, name=screensaver_activate_on_sleep, value=1 Row: 16 _id=19, name=screensaver_components, value=com.google.android.deskclock/com.android.deskclock.Screensaver Row: 17 _id=20, name=screensaver_default_component, value=com.google.android.deskclock/com.android.deskclock.Screensaver Row: 18 _id=21, name=accessibility_display_magnification_enabled, value=0 Row: 19 _id=22, name=accessibility_display_magnification_scale, value=2.0 Row: 20 _id=23, name=accessibility_display_magnification_auto_update, value=1 Row: 21 _id=25, name=immersive_mode_confirmations, value= Row: 22 _id=26, name=install_non_market_apps, value=0 Row: 23 _id=27, name=wake_gesture_enabled, value=1 Row: 24 _id=28, name=lock_screen_show_notifications, value=1 Row: 25 _id=29, name=lock_screen_allow_private_notifications, value=1 Row: 26 _id=30, name=sleep_timeout, value=-1 Row: 27 _id=31, name=user_setup_device_owner, value=0 Row: 28 _id=32, name=default_input_method, value=jp.co.omronsoft.iwnnime.ml/.standardcommon.IWnnLanguageSwitcher Row: 29 _id=33, name=enabled_input_methods, value=jp.co.omronsoft.iwnnime.ml/.standardcommon.IWnnLanguageSwitcher:com.google.android.googlequicksearchbox/com.google.android.voicesearch.ime.VoiceInputMethodService:com.google.android.inputmethod.japanese/.MozcService Row: 30 _id=34, name=android_id, value=96da7351650db297 Row: 31 _id=35, name=input_methods_subtype_history, value= Row: 32 _id=36, name=selected_input_method_subtype, value=-1 Row: 33 _id=37, name=lock_screen_owner_info_enabled, value=0 Row: 34 _id=38, name=user_setup_complete, value=1 Row: 35 _id=39, name=show_note_about_notification_hiding, value=0 Row: 36 _id=40, name=trust_agents_initialized, value=1 Row: 37 _id=41, name=bluetooth_name, value=TAB-A03-BR2 Row: 38 _id=42, name=bluetooth_address, value=AC:3F:A4:D6:C8:C3 Row: 39 _id=43, name=bluetooth_addr_valid, value=1 Row: 40 _id=44, name=screensaver_enabled, value=0 Row: 41 _id=45, name=location_providers_allowed, value= Row: 42 _id=46, name=spell_checker_enabled, value=1 Row: 43 _id=47, name=accessibility_captioning_enabled, value=0 Row: 44 _id=48, name=high_text_contrast_enabled, value=0 Row: 45 _id=49, name=accessibility_display_inversion_enabled, value=0 Row: 46 _id=50, name=accessibility_display_daltonizer_enabled, value=0 Row: 47 _id=51, name=bluetooth_hci_log, value=0 Row: 48 _id=52, name=usb_audio_automatic_routing_disabled, value=0 Row: 49 _id=53, name=anr_show_background, value=0 install_non_market_appsが無い！\n困りました。これでは設定を有効化できません。\nということでエラーが発生した場合は末尾に設定項目を自分で追加します。\n以下の2つのコマンドのどちらかで追加できるはずです。\nadb shell content insert --uri content://settings/secure --bind name:s:install_non_market_apps --bind value:i:1 adb shell settings put secure install_non_market_apps 1 ランチャーのインストール # デフォルトのランチャーでは設定アプリしか起動できないため適当なランチャーをインストールします。\n一番シンプルで無難なNova LauncherかLauncher3あたりを入れておきましょう。\nNova Launcherの場合は6.2.19がAndroid 5.1対応の最終バージョンなのでバージョンに気をつけて入れてください。\nインストールする際はPCから\nadb install APKファイルのパス で入れましょう\nストアのインストール # Playストアを入れたいところですが、入れても満足に動かなかったので諦めてAurora StoreやAPK Pureなどのサードパーティのストアを入れておきます。\n個人的にはAurora Storeが一番まともに使えそうかなといった感じ。\nストアを入れたらブラウザやファイルマネージャーなどを入れておきます。デフォルトのものでは不便なので。\nやってもやらなくてもいいこと # ここまでくればもう比較的普通のAndroidタブレットとして使える状態になりましたが、まだ細かいところが気になるのでそこを弄っていきます。\nPlay開発者サービスを入れる # こちらのリポジトリを使用するとGApps関連がインストールされます。\nKobold831/EnableGPlayWithPC チャレンジパッドで、Google Playの機能の一部を使えるようにするツールです。 C# 2 0 ただ、インストールできてもPlayストアからのインストールやGoogle設定の起動などがうまく動きません。\nAurora Storeなどとの併用でアプリの動作率を上げていくために導入するといった感じですかね。\nちなみにこのツールWindows専用です。うーん微妙！\nその他 # ADBでベネッセ製アプリを強制削除 ステータスバーのバッテリーアイコン内に残量を%で表示 時間を24時間表記にする パスワードを設定する etc… おわりに # 今更！？！？って感じでしたね。\n感圧式タッチパネルが使いにくいです。\n使い道とやってほしいこと募集中です。\nちなみにサンセットは某事件でベネッセから図書カードもらってます。\nそれでは、また次回。\n","date":"2024/09/03","externalUrl":null,"permalink":"/blog/2024/09/03/challenge-pad-2/","section":"ブログ","summary":"今更！？！？(2024年9月)","title":"チャレンジパッド2を弄る話","type":"blog"},{"content":" はじめに # 毎年夏から秋ごろに発売されるXiaomi Smart Bandのグローバル(日本)版。\n毎年低価格を維持しながら確実にアップデートを重ねており、その変化を楽しみにしていたのですが、今年もついに発売されたので購入しました。\nいつも通り前作と比較しながら最新作を見ていきます。\n今回はAmazonで日本版を購入しています。\n前作の話はこちら。\nXiaomi Smart Band 8のグローバル版を買ったはずが日本版と同じだった話 2023/10/11 中華フォントで改行位置が変な日本語使うなら英語のほうが良くない？ パッケージ比較 # 毎年の変化の楽しみの1つ、パッケージの比較です。\nパッケージ写真が正面を向きましたね。\n私は4, 6, 7, 8を使ってきましたが、パッケージが正面を向いているのは初めてです。\nまた、パッケージ背面の文字が読みやすくなりました。\n開封 # それでは開封していきます。\n内容品は前作と変わらずですが、今作でついに輸送時の画面保護用シールが貼られるようになりました。\n本体 # 本体を並べるとこんな感じ。\n左が8、右が9です。\n側面がマット仕上げになり、背面センサーの配置が変更になりました。\nバンドの仕様などは前作と変わりません。\n前作からの変更点 # 前作からの変更点をまとめます。\n気づかないレベルで少し小さくなった 画面のピーク輝度が600nitから1200nitになった OSがXiaomi HyperOSになった バッテリーが190mAhから233mAhになった(公称16日→21日) バイブがちょっといい感じ™になった アイコンが若干変更された 画面遷移時にちょっとだけアニメーションが追加された 初期化しなくても新しい端末に接続できるようになった うーん誤差！\nおわりに # 前作と比較するとバンド仕様もフェイスもほとんど変更なしで8からの買い替えはしなくてもいいかなといった感じでした。\nそれでも確実にアップデートはされており、4や5のころのような化け物じみたバッテリー持ちを取り戻そうとしています。\n7以前からの買い替えはありというか推奨するレベルで、8からでも画面輝度上昇やバッテリー持ちの改善など、買い替える決断に至る要素はあるかと思います。\n最後にAmazonの商品ページへのリンクを貼って置くので気になった方は購入してみてください。\nそれでは、また次回。\nXiaomi Smart Band 9 (Amazonアフィリエイトリンク)\n","date":"2024/08/18","externalUrl":null,"permalink":"/blog/2024/08/18/xiaomi-smart-band-9/","section":"ブログ","summary":"毎年「これが完成形か！？」「えっここがアップデートされるの！？」を繰り返してる","title":"Xiaomi Smart Band 9を買った話","type":"blog"},{"content":" はじめに # 自宅サーバーの登竜門とも言えるMinecraft。\nサーバーを構築するだけなら簡単ですが、細かい要望に応えようとすると設定が難しいのもMinecraftサーバーの特徴。\n例えば、2つのサーバーをポートを変えずにドメインの違いだけで分けたいとか。\n今回はタイトルのような感じのMinecraftサーバーを構築する手順です。\n要件 # 手順に移る前に今回構築したいサーバーの要件をまとめます。\nOSは安定のDebian12 サバイバル用サーバーと試作クリエイティブ用サーバーの2つを運用したい 開放するポートは25565のみで、ドメインごとにサーバーを割り振りたい 動的IPの回線でCloudflareのDNSを使用したドメインを使いたい Minecraftサーバーの起動・終了はsystemdを使いたい Minecraftサーバーのコンソールはちゃんと触りたい なんとまあ贅沢な望みだという感じですが、ちゃんと実現できます。\n人によってどこまで必要か変わってくると思うので部分ごとに解説していきます。\nsystemdでMinecraftサーバーを管理し、screenでコンソールにアクセスする # systemdで運用する関係でコンソールへのアクセスはscreenを使うという方法です。\nMinecraftサーバーの建て方はわかってる前提で書くのでわからない人は勉強してから来てくださいね。\nということでsystemdの設定ファイルから。{}で囲まれた部分は各自の環境に合わせて変えてください。\n[Unit] Description={Minecraft Server Description} After=network-online.target [Service] Type=forking User={userName} Group={groupName} WorkingDirectory={/path/to/server} ExecStart=screen -S {screenName} -d -m java -Xmx2G -jar {/path/to/server/server.jar} --nogui ExecStop=screen -S {screenName} -X quit Restart=always [Install] WantedBy = multi-user.target これを2つ分作ってMinecraft側でポートを変えれば2台をたてるのはすぐできますね。\nJavaの起動設定は任意で変えましょう。\nコンソールを触るときは\nscreen -r {screenName} で入り、出るときはCtrl + A -\u0026gt; Dで抜けます。\n2つのMinecraft鯖に通信を割り振る # itzg/mc-routerというものを使用してドメインごとにサーバーを割り振ります。\nこれはgit cloneしてdocker-compose.yml書いて起動するだけなので設定ファイルだけ。\nこちらも{}で囲まれた部分は環境に合わせて変えて下さい。\nversion: \u0026#34;3.8\u0026#34; services: router: image: itzg/mc-router:latest environment: API_BINDING: \u0026#34;:25564\u0026#34; ports: - 25565:25565 - 25564:25564 restart: always command: --mapping={mc1.example.com}={server1-ip:port},{mc2.example.com}={server2-ip:port} お気づきの方もいるかもしれませんが、これサーバーが同じでも別でもどこにあっても通信割り振りできます。お得ですね。\nmc-routerの動作確認は\ncurl -H Accept:application/json localhost:25564/routes でできます。\nここまででローカルからはhostsを書けばドメインごとに通信割り振りがされるサーバーが完成しました。\nhostsでmc-routerに対してドメインを2つ向けて動作確認してみましょう。\nCloudflareのDNSを使うドメインを動的IPで使用する # 外部ツールを使ったりなどいくつか方法はありますが、今回はシェルスクリプトでAPIを叩いて更新する方法を使います。\n必要な情報は以下の5つです。\nCloudflareアカウントのメールアドレス アカウントのAPIトークン ドメインのゾーンID ドメイン1のレコードID ドメイン2のレコードID これらはWebダッシュボードまたはcurlで取得することができます。\nこれを以下のシェルスクリプトに入れてcronで自動実行すれば自動更新は完成です。\n毎度のことですが{}で囲われた部分は正規表現を除いて(ry\n#!/bin/bash # 更新するドメイン MY_DOMAIN1=\u0026#34;{mc1.example.com}\u0026#34; MY_DOMAIN2=\u0026#34;{mc2.example.com}\u0026#34; # API アクセス情報 ZONE_ID=\u0026#34;{zone-id}\u0026#34; RECORD_ID1=\u0026#34;{record-id-1}\u0026#34; RECORD_ID2=\u0026#34;{record-id-2}\u0026#34; AUTH_EMAIL=\u0026#34;{mail@example.com}\u0026#34; API_TOKEN=\u0026#34;{API-token}\u0026#34; # IPアドレス取得サービスのリスト services=( \u0026#34;https://api.ipify.org/\u0026#34; \u0026#34;https://checkip.amazonaws.com/\u0026#34; \u0026#34;https://ipv4.icanhazip.com/\u0026#34; \u0026#34;https://4.icanhazip.com/\u0026#34; ) ip_address=\u0026#34;\u0026#34; # IPアドレスを取得する関数 get_ip_address() { local url=\u0026#34;$1\u0026#34; ip_address=$(curl -s \u0026#34;$url\u0026#34;) } # IPアドレスの正規表現パターン ip_pattern=\u0026#34;^([0-9]{1,3}\\.){3}[0-9]{1,3}$\u0026#34; # 正規表現でIPアドレスが検証できるかチェック is_valid_ip() { [[ $ip_address =~ $ip_pattern ]] } # IPアドレス取得のループ for service in \u0026#34;${services[@]}\u0026#34;; do get_ip_address \u0026#34;$service\u0026#34; if is_valid_ip; then break fi done # ipアドレス更新テスト # ip_address = 8.8.8.8 echo \u0026#34;\u0026#34; echo \u0026#34;IP address : ${ip_address}\u0026#34; echo \u0026#34;\u0026#34; echo \u0026#34;{mc1.example.com} result\u0026#34; echo \u0026#34;---------------------------------------------------------\u0026#34; # CloudFlare API Aレコード更新 curl --request PUT \\ --url https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID1 \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --header \u0026#34;X-Auth-Email: $AUTH_EMAIL\u0026#34; \\ --header \u0026#34;Authorization: Bearer $API_TOKEN\u0026#34; \\ --data \u0026#39;{ \u0026#34;content\u0026#34;: \u0026#34;\u0026#39;\u0026#34;$ip_address\u0026#34;\u0026#39;\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#39;\u0026#34;$MY_DOMAIN1\u0026#34;\u0026#39;\u0026#34;, \u0026#34;proxied\u0026#34;: false, \u0026#34;type\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;comment\u0026#34;: \u0026#34;{minecraft server 1}\u0026#34; }\u0026#39; echo \u0026#34;\u0026#34; echo \u0026#34;---------------------------------------------------------\u0026#34; echo \u0026#34;\u0026#34; echo \u0026#34;{mc2.example.com} result\u0026#34; echo \u0026#34;---------------------------------------------------------\u0026#34; # CloudFlare API Aレコード更新 curl --request PUT \\ --url https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID2 \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --header \u0026#34;X-Auth-Email: $AUTH_EMAIL\u0026#34; \\ --header \u0026#34;Authorization: Bearer $API_TOKEN\u0026#34; \\ --data \u0026#39;{ \u0026#34;content\u0026#34;: \u0026#34;\u0026#39;\u0026#34;$ip_address\u0026#34;\u0026#39;\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#39;\u0026#34;$MY_DOMAIN2\u0026#34;\u0026#39;\u0026#34;, \u0026#34;proxied\u0026#34;: false, \u0026#34;type\u0026#34;: \u0026#34;A\u0026#34;, \u0026#34;comment\u0026#34;: \u0026#34;{minecraft server 2}\u0026#34; }\u0026#39; echo \u0026#34;\u0026#34; echo \u0026#34;---------------------------------------------------------\u0026#34; echo \u0026#34;\u0026#34; わからない人はCloudflare DDNSとかCloudflare API ドメイン更新とかで調べると出てくるのでその辺見てやってください。\nおわりに # 今回はサンセットがMinecraftサーバーでやりたかったことを実現するための方法を雑にまとめる記事でした。\n意外と奥深いMinecraftサーバーの世界、これに少しは入っていけたのかなと思います。\n今回の記事はとても雑なので不明点など聞きたいことがあればSNSのDMなどで連絡ください。\nそれでは、また次回。\n","date":"2024/07/14","externalUrl":null,"permalink":"/blog/2024/07/14/minecraft-multi-server/","section":"ブログ","summary":"Minecraftはサーバー管理者の登竜門","title":"Cloudflareのドメインと1台の自宅サーバーで複数のMinecraftサーバーをホストする","type":"blog"},{"content":" 相互リンク所 # こんなサイトと相互リンクしてくださるんですか！？\nいつもありがとうございます…！\n","date":"2024/06/14","externalUrl":null,"permalink":"/link/","section":"サンセットのウェブサイト","summary":"","title":"リンク","type":"page"},{"content":"","date":"2024/05/25","externalUrl":null,"permalink":"/tags/pc/","section":"Tags","summary":"","title":"Pc","type":"tags"},{"content":" はじめに # (普通の)Windows10のサポートも残り1年半ほどとなり、現在使っているPCの進退を考える時期になりました。\nメモリ増設やストレージ換装で使うのか、それとも買い替えるのか…\n考えた末に今回は祖母のPCを買い替えることにしたのでその話です。\nプレゼントしたPC # 今回購入したPCはLenovo V15 Gen4の価格comモデルです。\nRyzen5/16GB/512GBというスペックで6.6万円でした。\n細かいスペックは比較のときに紹介するとして、ここではこのPCの外観などを紹介します。\nまずは箱から出して本体を舐め回しながら見るところまで。\nいたって普通のシンプルなノートPCって感じですね。\n外装がプラスチックのため、アルミなどのPCに比べると安っぽさがありますが、今まで使ってきた2014年くらいのノートPCに比べればありですね。\nポート類が少なめなのがPCオタクとして気になるポイントですが、今回の利用者は私の祖母です。充電器と外付けDVDドライブ、無線マウスのレシーバー以外使わないので全く問題なしですね。\n次に本体を開けたところも見ていきます。\nまあ普通って感じですね。\nキー配列も特に変なところもなく、輸送時に必要な保護もされている。\nカメラカバーがあるのは嬉しいポイントですね。\n充電器はこんな感じ。\nACアダプタ側はミッ◯ー3ピンタイプ、PC側は丸型ですね。\nLenovoは角形コネクタやめたんですかね。あれ挿したとき安定して好きだったのに。\nOSはWindows 11 Homeでした。\n今までのPCとの比較 # 今まで使ってたノートPCと今回購入したノートPCの比較です。\n旧PCはソリティアが正常に動かないくらい重かったです。\n項目 旧PC 新PC 機種名 Lenovo B50-70 Lenovo V15 Gen4 CPU Core i3 4030U Ryzen 5 7430U RAM DDR3 4GB DDR4 16GB ストレージ SATA HDD 320GB NVMe SSD 512GB 画面 15.6型 TFT 1366x768 15.6型 IPS 1920x1080 0S Windows 10 Home Windows 11 Home 新しくなってある程度の3Dゲームくらいなら動いてしまいそうな感じになりましたね。\nこれでソリティアも快適に遊べると思います。\n見たい人のためにタスクマネージャと設定画面のスクショを置いておきますね。\nベンチマーク # 新しいPCがあったらベンチマークを取りたいというもの。\nというわけで早速結果です。\nいいですね。とても。\nおわりに # あらゆる動作が快適になり、なによりソリティアが問題なく遊べるPCになったので祖母も喜んでいました。\n今回購入したPCは注文時にカスタマイズが可能で、無線モジュールを11axのものから11acのものにダウングレードすることができます。\n今回は11axがあっても意味がない環境で使用するPCだったのでダウングレードして少し安く購入することができました。\n最近画像を入れすぎてそろそろGitHubに怒られないか怖くなってきました。\n近い内に履歴の整理などをしてリポジトリを軽量化したいですね。\nそれでは、また次回。\n","date":"2024/05/25","externalUrl":null,"permalink":"/blog/2024/05/25/grandma-new-pc/","section":"ブログ","summary":"ソリティアが快適になって喜んでました","title":"祖母にノートPCをプレゼントした話","type":"blog"},{"content":" はじめに # 最近、Anker 347 Power Bankという40000mAhのクソデカいモバイルバッテリーを買ったんですが、ちょっとサイズや質感的にケースがほしい感じなんですよね。\nしかしAmazonでケースを検索すると2,500円くらいのものしかなく、他で代用できないかと考え家中を探し回った結果、とても丁度いいものを見つけたのでこれを紹介していきます。\n買ったモバイルバッテリーについて # Anker 347 Power Bankと調べてもらえればわかるものではありますが、どんなサイズ感かだけは見てもらいましょうか。\nはい、でかいですね。40000mAhあるので当然ですが。\n以前使っていたAnker PowerHouse 100と比較するとこんな感じ。\n27000mAhのAC100V対応バッテリーもなかなかのサイズでしたが、4000mAhともなると厚みが違いますね厚みが。\nまあこんな感じでデカくて重いわけですよ。\nこれをこのままかばんに入れてしまうとどんどん擦れて下に落ちていってしまうわけです。\nケース…欲しいですよね。\nケース探しの旅 # というわけで良い感じに使えそうなケースを探します。\nまずは以前使っていたAnker Power House 100付属の巾着から\nうーんこれはちょっとサイズが合いませんね…\nそしてなんやかんやあって家中を漁ってると母から\nなんかそういうサイズの入れ物あった気するから探してくるわ〜\nとの知らせが。\nその後しばらくして持ってきたのがこれ。\n丁度いいサイズの予感…！\n資生堂の化粧ポーチ # 母が持ってきてくれたこの化粧ポーチ、入れ物としてどれくらい使えるのでしょうか。\nとりあえずモバイルバッテリー本体を入れてみましょう…\nシンデレラフィット！！！！！！\nなにこれすごい。もはや専用ケース…\nそういえばケースに小物も入るなと思ったので入れてみると…\nもはやAnker純正だろこれ。\nでもタグは…\n資生堂！\n気になったこと # すっごく質感のいいケースだけどこれどうしたん？\n高いやつだとしたらこんな使い方もったいないし…\n化粧ポーチなんて安物しか買った覚えがないからこれはたぶん当時の行きつけの化粧品店で貰ったやつだね。\nその証拠に化粧品店で貰った試供品が大量にここに入ってたよ。(全て期限切れ)\nおわりに # 20年以上試供品の化粧品が入った状態で使われていなかったせいで強すぎるくらい化粧品の匂いがする状態でしたが、無事に丁度いいケースを入手することができました。\nガジェットケースには化粧品ポーチが意外と優秀。これは今後活きてきそうなので覚えておこうと思います。\n今回の記事、吹き出しを使いたいがために書いたのでちょっと微妙な感じだったかも。\nそれでは、また次回。\n","date":"2024/04/30","externalUrl":null,"permalink":"/blog/2024/04/30/anker-347pb-case/","section":"ブログ","summary":"専用品以外が専用品を上回ること、ありますよね。","title":"モバイルバッテリーのケースには化粧ポーチが最適という話","type":"blog"},{"content":" はじめに # 皆さんはMode1 RETRO Ⅱというスマホはご存知ですか？\n数少ない国内スマホメーカーの1つであるピーアップが販売しているスマートフォンシリーズ、Mode1のガラケー型スマートフォンの第2世代です。\nよくガラホじゃないかと言われますが、このスマホなんと画面がタッチできるうえ、UIがガラケーライクなデザインでなく、まんまAOSPな見た目になっていて例えるならキーパッドが付いたスマートフォンといった感じです。\nこんなニッチな端末の重要な部分、物理ボタンを今回は調査していきます。\n調査結果 # 調査結果を以下の表にまとめました。\n今回調査にKeyEvent Displayというアプリを使用しています。\nkey code scanCode label number KEYCODE Ⅰ 131 59 0 0 KEYCODE_F1 Ⅱ 132 60 0 0 KEYCODE_F2 Ⅲ (あ/A/1) 133 61 0 0 KEYCODE_F3 Ⅳ (☺記号) 134 62 0 0 KEYCODE_F4 ↑ (MENU) 19 103 0 0 KEYCODE_DPAD_UP ↓ 20 108 0 0 KEYCODE_DPAD_DOWN ← (⇆) 21 105 0 0 KEYCODE_DPAD_LEFT → (📖) 22 106 0 0 KEYCODE_DPAD_RIGHT OK 66 28 10 0 KEYCODE_ENTER ◁ 4 158 0 0 KEYCODE_BACK ○ (3) - - - (KEYCODE_HOME) □ (187) - - - (KEYCODE_APP_SWITCH) 📞 5 169 0 0 KEYCODE_CALL クリア 67 14 0 0 KEYCODE_DEL ☎ (⏻) 136 0 0 0 KEYCODE_F6 1 (あ, @) 8 2 49 49 KEYCODE_1 2 (か, ABC) 9 3 50 50 KEYCODE_2 3 (さ, DEF) 10 4 51 51 KEYCODE_3 4 (た, GHI) 11 5 52 52 KEYCODE_4 5 (な, JKL) 12 6 53 53 KEYCODE_5 6 (は, MNO) 13 7 54 54 KEYCODE_6 7 (ま, PQRS) 14 8 55 55 KEYCODE_7 8 (や, TUV) 15 9 56 56 KEYCODE_8 9 (ら, WXYZ) 16 10 57 57 KEYCODE_9 * (゛゜, a/A) 17 522 42 42 KEYCODE_STAR 0 (わをん) 7 11 48 48 KEYCODE_0 # (、。？！) 18 523 35 35 KEYCODE_POUND 音量+ 24 115 0 0 KEYCODE_VOLUME_UP 音量- 25 114 0 0 KEYCODE_VOLUME_DOWN 本体を折りたたむ 141 87 0 0 KEYCODE_F11 ということで、この端末専用のボタンがAndroidで使わないであろうキーボードのF1~F4, F6, F11のキーコードで配置されていますね。\n実際にキーボードを繋いで該当するキーを押したらどうなるか気になりますよね？\n次にやっていきましょうか。\n物理キーボードを繋いでみる # F1~F4, F6, F11キーのキーコードが使われているということで、普通の物理キーボードを繋いで検証してみました。\n結果は以下の動画の通りですが、見事に反応し、F11キーに関しては本体を閉じなくても閉じたときの挙動をさせることができて面白い感じでした。\nMode1 RETRO Ⅱのキーコードを調査した結果、Ⅰ〜Ⅳや通話終了ボタンがキーボードのF1〜F12キーのキーコードで割り当てられていることが発覚\n物理キーボードを接続して、Fキーを押したところ見事に反応してしまいました\n後日ブログに書きたいと思います pic.twitter.com/xVOrEMIEnS\n\u0026mdash; サンセット.xlsm (@sunset09160306) April 7, 2024 おわりに # 今回はMode1 RETRO Ⅱのキーコードを調べ、物理キーボードから該当キーコードを流す検証をしました。\n独自実装ではなくF1~F4, F6, F11キーの流用ということでアプリ側でなんやかんやすればなにかに使えそうな気がしたりしなかったりしますね。\nMode1 RETRO Ⅱで検証してほしいことなどあれば連絡頂ければと思います。\nそれでは、また次回。\n","date":"2024/04/08","externalUrl":null,"permalink":"/blog/2024/04/08/mode1-retro-ii-keycode/","section":"ブログ","summary":"特殊なスマホはいろいろ特殊になりがち","title":"Mode1 RETRO Ⅱの物理ボタンのキーコードを調べた話","type":"blog"},{"content":" はじめに # C言語の開発環境を整えたくなることありますよね。\nしかしmacOSでは、デフォルトの状態でgccやg++がClangというコンパイラへのリンクとなっており、gcc用に書かれたコードをコンパイルしようとするとライブラリが足りずにコンパイルできないなんてことになります。\ngccを入れシンボリックリンクを置いてClangからコマンドの宛先を奪い取っても良いんですが、これではシンプルと呼べないので今回はVSCodeの拡張機能だけでサクッとコンパイル・実行できるようにしていきます。\n前提 # 今回は以下のような状態であることを前提とします。\nApple SiliconのMac macOS 14 Sonoma VSCode Code Runner Homebrew(arm64) gcc VSCodeに拡張機能のCode Runnerを入れておきます。\nHomebrewはRosettaを使わない状態で入れ、gccをインストールしておきます。\n設定 # 前提のところまで環境ができたら拡張機能の設定でいい感じ™にコンパイル・実行できるようにしていきます。\nはじめに、Code Runnerの設定アイコンかVSCodeの設定からCode-runner: Executor Mapの項目を出し、settings.jsonを開きます。\nすると、以下のようなjsonの構造があると思うので、\n\u0026#34;code-runner.executorMap\u0026#34;: { }, ここに以下のようにgccのパスを含んだコマンドを入れます。\n\u0026#34;c\u0026#34;: \u0026#34;cd $dir \u0026amp;\u0026amp; /opt/homebrew/bin/gcc-14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026#34;, \u0026#34;cpp\u0026#34;: \u0026#34;cd $dir \u0026amp;\u0026amp; /opt/homebrew/bin/g++-14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026#34;, 私の環境ではこうなっています。\n\u0026#34;code-runner.executorMap\u0026#34;: { \u0026#34;c\u0026#34;: \u0026#34;cd $dir \u0026amp;\u0026amp; /opt/homebrew/bin/gcc-14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026#34;, \u0026#34;cpp\u0026#34;: \u0026#34;cd $dir \u0026amp;\u0026amp; /opt/homebrew/bin/g++-14 $fileName -o $fileNameWithoutExt \u0026amp;\u0026amp; $dir$fileNameWithoutExt\u0026#34;, \u0026#34;python\u0026#34;: \u0026#34;python3 -u\u0026#34; }, /opt/homebrew/bin/gcc-14はインストールしたgccのパスで、その他の部分はCode Runnerのデフォルトの設定になっています。\nこの部分はCode Runnerのコマンドをカスタマイズする方法などで調べると書き方が出てくると思うので自由に使いやすいように変更すると良いと思います。\n最後にCommand + Sで保存するのをお忘れなく。\nコンパイル・実行 # 設定が終わればあとは実行するだけです。\n画面右上の実行ボタンからRun CodeをクリックまたはCtrl + Option + Nでgccを使ったコンパイル・実行ができるはずです。\nおわりに # 今回はmacOS上のVSCodeを使った環境でgccでコンパイル・実行する方法でした。\nこの方法であればデフォルトのClangの部分を一切変更せずにVSCode上ではHomebrewで入れたgccを使って開発を進めることができます。\nネットで調べるとパスを通すだとかシンボリックリンクを配置するだとか初心者に優しくない方法が上位に出てきますが、これなら簡単で環境を壊すこともないのでおすすめできると思います。\nVSCode以外でもgccを使いたい場合は気合で/opt/homebrew/bin/gcc-14を打つかパス通してなんとかするかしてください。\nそれでは、また次回。\n","date":"2024/04/01","externalUrl":null,"permalink":"/blog/2024/04/01/macos-vscode-gcc/","section":"ブログ","summary":"Clangなんてコンパイラ、知らない！","title":"macOS上のVSCodeで(たぶん)一番シンプルにgccを使ってコンパイル・実行する方法","type":"blog"},{"content":"","date":"2024/04/01","externalUrl":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming","type":"tags"},{"content":" はじめに # アプデ、面倒ですよね。\nMisskeyなどのアップデートなんかは特に、他に使用するパッケージのアップデートまで要求してくるので。\nこれが大きな問題になったのがMisskey v12からv13になったとき。\nPostgreSQLとNode.jsのアップデートが必要になり、今回の事例のようなアプデをサボる原因になってしまいました。\n今回SOSを受けてアプデ作業をした環境はこちら。\nKona Linux 32bit (32bit機からHDDだけ移動させたらしい) Misskey v12.119.2 Docker Compose Node.js v16.15.1 PostgreSQL v12.2 Redis v4.0 v12をそのままDockerで動かしたような構成ですね。\nこれを一気に更新して以下のようにしました。\nDebian 12 64bit Misskey v2024.3.1 Node.js v20.11.1 PostgreSQL v15.6 Redis v7.2.4 いやー最新っていいですね。ここまでやれば当事者も今後はアプデ作業をしてくれることでしょう。\n今回はDockerから非Docker環境への移行とアップデートの手順をまとめる回になります。\n移行対象データの取り出し # まずは旧環境から移行対象のデータを取り出します。\n必要なデータは以下のとおり。\n.config/default.yml files/ データベースのバックアップ 任意ですが、Redisのバックアップを取ると移行後に溜まっていたキューなどを失わずに動かすことができます。\n無くても一部サーバーに一部投稿が届かないだけなので、気にしない方はやらなくても問題なく移行できます。\ndefault.ymlに関しては最悪無くても気合で思い出して設定すれば大丈夫ですが、ID設定など、途中からデフォルト値が変更されたものの中で移行時に変更してはいけないものがあるため、ある状態で移行するのが望ましいと思います。\nデータベースのバックアップは2通りで、クラスタ全体のバックアップと特定データベースのバックアップがあります。\nサーバーを運用するくらいの人であれば以下のコードブロックを見れば理解してくれることでしょう。\n# とりあえず全部落とす docker-compose down # PostgreSQLのコンテナのみ起動する docker-compose up -d db # docker psなどで確認したコンテナ名またはIDのシェルに入る docker exec -it コンテナ名 /bin/bash # どこでやってもいいけどとりあえずわかりやすく/tmpで作業 cd /tmp # pg_dumpで移行する場合(一度起動してDBの構造を作ったりする場合) pg_dump -Fc -U example-misskey-user -d misskey \u0026gt; backup.dmp # pg_dumpallで移行する場合(データベースの構造そのものを移行する場合) pg_dumpall -U example-misskey-user \u0026gt; backup.sql # コンテナのシェルから出る exit # docker cpコマンドでコンテナ内のファイルをホストにコピーする docker cp db:/tmp/backup.xxx ~/ # もう使わないのでコンテナは落とすなりなんなりと docker-compose down はい、こんな感じです。\ndocker execで初めからホストにDBのダンプをすれば良くない？って疑問については、なんかバグるからやめといたほうがいいよって感じで思ってもらえたら。\n上記についてたぶんこうだろうって考察 Dockerコンテナから直接ホストOSにファイルを保存するという行為は、場合によっては言語や文字コードが異なる環境のシェルに標準出力として流してしまうことになります。\nMisskeyのデータベースには投稿などが含まれますが、この投稿はアルファベットだけでなく日本語や特殊文字なども含まれています。\nこれを、言語の設定などが違う可能性のあるDockerコンテナから直接自身のホストOSのシェルに流してリダイレクトすると文字化けなどの不具合の原因になる可能性が高いと推測します。\nこれを回避するには、一度Dockerコンテナ内のシェルでファイルの保存までを行ってからdocker cpコマンドでファイルを持ってくるのが確実だと考え、これを採用しました。\n正しいかわからんのでなんか良い考察や情報があれば教えてほしい。\n移行先環境のセットアップ # データが救出できたら次は移行先のセットアップです。\nとりあえず最新環境にすればってわけにもいかなさそうなのでまずは移行前のバージョンであるv12が動くようにセットアップしていきます。\n最初に入れるのは以下のパッケージ\nNode.js v18.x Redis v7.x PostgreSQL v15.x FFmpeg build-essential Node.js以外は最新Misskeyに対応したものになります。\nNode.jsだけ最新でない理由として、v12を動かすためのyarn installが正常に動いてくれないことなどが挙げられます。\nNode.jsのバージョンは最後、Misskeyを最新版にするタイミングでv20に上げます。\nMisskeyのインストールはまあわかると思うのでそのままやってください。\n今回ははじめにv12最終盤を入れるので、git checkout a5a74f4でバージョン指定をしていきます。\n今後はこのコミットIDを変えて少しずつ安全にバージョンアップをしていきます。\nyarn installができたらfiles/と.config/default.ymlを配置します。\nこのときの注意点として、docker用と通常のdefault.ymlでは設定する項目が異なる点があります。\nPostgreSQLとRedisはlocalhostに、その他項目も説明を読みながら変更していきます。\n次にデータベースを戻します。\npg_dumpallを使った場合はMisskeyの起動前にDBをpsqlでリストアして起動します。\nsudo su postgres psql -f backup.sql pg_dumpを使った場合はDBの構造を用意してからmisskeyデータベースに対してpg_restoreでリストアします。\npg_restore --clean -U example-misskey-user -d misskey backup.dmp これで起動すれば問題なく起動できるはずです。\nsystemdのサービスのファイルを用意するのも忘れずにね。\n最新版までアップデートする # まあここはもう普通にアップデートするだけなんで大丈夫なんですけど、いきなり最新まで上げたりするのは怖いので現実的にちょっとサボった人がアプデしたかなってくらいの間隔でアップデートしました。\n最初にv13初期バージョンに上げますが、ここでsystemdのサービスのファイルを更新するのをお忘れなく。\n同時にメモリアロケーターの設定を入れておくとメモリリーク対策になるのでおすすめです。\nNode.jsのアップデートはv2023.12.0のアプデ直前くらいにすれば問題ないです。(あまり早い段階でアプデすると起動しないかも)\nそうこうしているうちに最新版になりましたね。ね？\nはいアプデおしまい！終わり！\nおわりに # アプデはサボらない方がいいし、わけわからんならDockerは使わないほうがいい\nって思いました。以上！\nそれでは、また次回。\n","date":"2024/03/19","externalUrl":null,"permalink":"/blog/2024/03/19/tenpest-moon-upgrade/","section":"ブログ","summary":"誰のサーバーかは言ってないけどモザイク貫通でバレバレらしい","title":"32bitでDockerでMisskey v12なサーバーを64bitでネイティブ動作の最新版までアップグレードした話","type":"blog"},{"content":" はじめに # エゴサってあるじゃないですか。そう、エゴサ。\n周りの人から呼ばれる自分の名前やあだ名などを検索して自分に対する言及などを拾う行為のこと。\nサンセットが普段いるSNSのMisskeyにはそれを自動で行い、該当する投稿を収集する「アンテナ」という機能があるのですが、今回はこの「アンテナ」の設定で少し躓いた話です。\n今回は内容薄いですよ。\nサンセットはMisskeyのサーバーを自分で運営しており、そこで動作確認をしています。\n公開サーバーなどで大容量のテキストをアンテナに設定するなどの行為をすると、サーバー本体や運営に負荷をかけてしまう恐れがありますのでやめましょう。 ことの発端 # ただ検索するだけで何を躓いたのか。\nサンセットは何故か周りの人に様々な呼ばれ方をすることがあり、それに対応するうちに特殊文字などを使った悪質なエゴサ回避が蔓延るようになりました。\n特殊文字にも対応していくうちに万単位のエゴサワードを保持する異常状態になっていたというわけです。\nただ検索するだけならMisskeyのアンテナの機能で単語ごとに改行して設定していくだけです。\n…が、ここで問題が1つ。\nMisskeyのアンテナでは正規表現が利用できない(普通はいらない)ので、想定されるパターンをすべて列挙しなければなりません。\nここで私はPythonを利用して想定されるエゴサパターンを生成するスクリプトを作成し、これをアンテナの設定画面に貼り付けることで解決しようとしました。\nこうして生成されたエゴサワードは100万行超えで25MBの怪物で、これなら悪質エゴサ回避撲滅間違いなしの超大作でした。\n…\nここで事件は発生します。\n買ったばかりのMacBook Pro(M3)でもフリーズするブラウザ、最後まで文字列が入らない入力欄、押しても保存できない保存ボタン…\nあぁ、お前もこうやってサンセットのエゴサを邪魔するんだな。\n制限その1 # まず困ったのが入力欄に文字列が入らない問題。\nデータ量の問題の可能性もありますが、試したところ888744行までしか入力できなかったのです。\nこれでは100万行超えのエゴサワードを設定できません。困りました。\n仕方なくワード生成アルゴリズムの変更と使用文字の厳選を行い、行数は減らしましたが、今度は保存ができない問題が発生しました。\nここでのデータサイズは9.3MB。さっきの半分以下なのに…\n制限その2 # 調べていくうちに、Misskeyのアンテナには1MiBの制限があることが判明しました。(出典)\n調べてくれたさいばれ先生に大感謝です。\nさて困りました。これでは多くの文字を削らないとエゴサをすることができません。\n厳選に厳選を重ねた結果、最終的には700KB程度に抑えたエゴサワードを作成し、今回の事件は終幕を迎えました。\nMisskeyでエゴサをする方へ # 容量制限には気をつけような。特に5万行を超える場合はね。\nおわりに # 「Misskeyにそんな制限があるなんて聞いたことない」という話が最初は出ていましたが、実際は大容量のリクエストを弾くためなのか制限がされていました。\nMisskeyがこういったところまでちゃんと実装されていることを感じるとともに、エゴサのために正規表現を実装してほしいなという感情が湧きました。\nこんなことになったのはお前ら(ここではサンセットのFFのことを指す)のせいだからな。\nそれでは、また次回。\n","date":"2024/03/12","externalUrl":null,"permalink":"/blog/2024/03/12/misskey-antenna/","section":"ブログ","summary":"こんなの気にしてるのサンセットだけ","title":"Misskeyのアンテナワードには1MiBの制限がある話","type":"blog"},{"content":" この記事はMisskey Advent Calendar 2023 4日目の記事です。 はじめに # はじめましての方ははじめまして、そうでない方はこんにちは。サンセット(@sunset@mi.sunset0916.net)です。\nさんせすきーという小規模なMisskeyサーバーの管理者をやっている美少女 [要出典] です。\nアドカレの前後の人がしっかり技術的なことを書きそうなので、今回Misskeyを始めてからなんやかんやあってほぼお一人様な小規模鯖の鯖缶を1年やってきた話を書こうと思います。\nMisskeyをはじめた # 私がMisskeyを始めたのは2022年6月、Submarinというサーバーが立ち上がった少し後でした。\n以前運営者が同じ旧Submarin(チャットアプリ)にいたこともあり試しに登録。\nそこからなんやかんやあってSubmarinに定住し、無事にMisskeyの廃人になることに。\nSubmarinを拠点にしていたことや、プログラミング、自宅鯖などに興味があったこともあり、先輩鯖缶など多くの技術者と交流を持つことができました。\nこれもしかして人生のターニングポイントってやつ？\n鯖缶をはじめた # Misskey.ioが同接300人でお祭り騒ぎになる少し前、Submarinが 最大一週間程度™ のメンテナンスに入りました。(実際は2.5週間くらい)\nTwitterが荒れたり不安定になったりなど様々な問題がありMisskeyに移住したのですが安定した居場所が消え去ってしまい、安定した居場所、自鯖の準備をすることに。\n当時は急ぎで建てたのでそのへんにあったノートPCにDebianを入れて構築しました。\n確かv12.119.1だったかな。\n転がってたノートPCという不安定な環境だったため招待や開放はせずにお一人様として運用していました。\nお一人様なのに何回かDB飛ばしかけたのは内緒。\n正式に鯖缶と認められた(?) # 2023年1月ごろ、サーバーを小型ベアボーンPCに置き換え、バックアップ先のNASを用意しUPSで停電対策をするなど、サーバーを安定して運用できる環境を整えました。\n過去に自宅鯖でHDDが故障して30万円弱お金が飛んだトラウマがあり結構慎重だったかも。\nMisskeyもv13系にアップデートし、利用規約やテーマなども整備。\n仕上げにメイド服を着た女装自撮りを投稿することで無事に正式に鯖缶として認められることとなりました。(この文化何なの)\n運用しているサーバーについて # 鯖缶ってなんか大変そうとか思う人もいそうなので現在のうちの鯖のことを軽く書いておきます。\n大丈夫大丈夫、鯖缶こわくないから。\nうちは基本的に信頼できるFFやリア友のみを招待で入れるスタンスなのでモデレーションはほぼしてません。\n鯖缶としてやることは基本的に障害対応とアップデートくらいです。\n基本的には停電が起きなければ怖いものはないですよ。\nサーバーの構成としては、i5-6500/8GB/HDDな小型ベアボーンPCにDebianを入れたものをサーバー本体に、RAID1のNASにUPSを取り付けたものをバックアップ先にしています。\n外部への公開はCloudflare Tunnelを使用し、バックアップは毎日深夜にデータベースを、週に1回全体バックアップを取っています。\n費用については鯖本体に7000円、バックアップ先に70000円ほどかけました。(鯖の写真)\nDBが無事ならあとはなんとかなる。村上さんもそう言ってたのでバックアップはしっかりしますよ。\n運用していて起きた変化など # 同接1~3人程度の超小規模鯖を拠点にしたことで、必然的に他サーバーの人たちと交流することになり、様々なサーバーのユーザーや管理者と関わりを持つようになりました。\nサーバー管理者が多いTLだとサーバー運用についての話題が上がることも多々あり、多くのことをTLから学ぶ日々を送っています。\n小規模鯖、自鯖だとLTLで完結することがまずないため、TLに様々な情報を流すために積極的に他サーバーの人をフォローするようになるなどの変化もありました。\nあと鯖缶繋がり？で知り合ったFFが私の通う専門学校の同じ学科に入学してきました。\nそんなことある？？？？？？？？？？？？\nおわりに # 今回はいろいろあって自鯖をやってる人の話でした。\n周りの人との繋がりに感謝ですほんとに。\n鯖缶やってる人とか意外と相談に乗ったり助けてくれたりするので自鯖やりたいなって人はそういう人探して交流してみるといいかも？\n来年のアドカレではプログラミングやってる人らしくプラグインとか外部ツールとか作りたいので、来年までにAiScriptとMisskeyAPI勉強してきます！\nそれでは、また次回。\n","date":"2023/12/04","externalUrl":null,"permalink":"/blog/2023/12/04/misskey-advent-2023/","section":"ブログ","summary":"この記事はMisskey Advent Calendar 2023 4日目の記事です","title":"Misskeyの鯖缶を始めて1年で起こったことや変化など","type":"blog"},{"content":" はじめに # 個人的にはhuamiとか70maiとかのデバイスは日本語のフォントや改行が微妙なので英語で使いたいんですよ。\nXiaomiのスマートバンドは価格の割に完成度が高くて日本発売前から使っているわけですが、今まですべて技適に通過していて日本語に非対応のグローバル版を英語で使ってきました。\n今回も同じだろうと思いAliExpressのXiaomi公式ストアからグローバル版を購入したのですが…\n今回は前作と比較する形で見ていきます。\n前作のレビューはFascodeのブログからどうぞ。\nパッケージ比較 # 意味はないかもしれませんが前作のXiaomi Smart Band 7のパッケージと比較します。\n正面はこんな感じ。\n今まで黒ベースだったパッケージが白ベースに変わりました。\nあとはいつものXiaomiって感じですかね。\n背面はこんな感じ。\nこれもいつも通りのXiaomi…\nなんか日本語書いてないこれ？\nそろそろお気づきのことかと思いますが、なんとグローバル版と日本版が統合されてしまいました。\n専用アプリのMi Fitnessは言語設定ができないので端末の言語に合わせて日本語になってしまいますね…\n残念！\n開封 # パッケージだけ眺めてもつまらないので開封していきましょうか。\n開けるとこんな感じ。\n更に開けていくとこんな感じ。\n見慣れない白い充電器以外はいつも通りですね。\n本体 # 7と比較したりしなかったりしながら見ていきます。\n並んでいるときは右側が8になります。\n側面\nセンサー面\n画面(と技適表示)\n8からは充電器が変わり、白くなりました。\n形状も少し変わり、Surfaceの充電器っぽくなりましたね。\n8の最大の特徴として、バンドの外し方が変わりました。\nApple Watchみたいにボタンを押して外すタイプですが、こちらはスライドではなく簡単に外すことができます。\n個人的には控えめに言って最高だと思います。\nおわりに # Xiaomi Smart Band 8、本体は60Hz対応や明るさ調整対応など、めっちゃ進化してしても良いんですが、アプリや言語が不自由になってしまった点が少し残念といった感じですね。\n今後のアプリの改善に期待したいと思います。\n今回はAliExpressで¥4,995で購入しましたが、Amazonで¥5,990で売っているものと中身は同じなので好きな方を買えばいいと思います。\n両方とも技適はあるので。\nブログっぽく最後に商品URLだけ貼っておきますね。\nもちろんアフィリエイトで（（（\nそれでは、また次回。\nXiaomi Smart Band 8 Global Version (AliExpress)\nXiaomi Smart Band 8 (Amazon)\n","date":"2023/10/11","externalUrl":null,"permalink":"/blog/2023/10/11/xiaomi-smart-band-8/","section":"ブログ","summary":"中華フォントで改行位置が変な日本語使うなら英語のほうが良くない？","title":"Xiaomi Smart Band 8のグローバル版を買ったはずが日本版と同じだった話","type":"blog"},{"content":" はじめに # Windowsタブレット、良いですよね。\n小さい本体にすべてが詰まっていて、性能は低いけど最低限動いてくれる。\n仕事もコーディング動画視聴も頑張れば出来なくはない。\n遊びがいありそうだし1台くらいは持っててもいいかなぁと。\n〜ある日ドスパラ中古にて〜\nAtom x5-Z8350/4GB/64GBなWinタブが2200円。\nよし通れ。ただしWindows、テメーはダメだ。\n購入したもの # 今回購入したWindowsタブレットはこちら\n分類 内容 型番 DG-D08IW2SL CPU Atom x5-Z8350 メモリ DDR3L 4GB UEFI 32bit ストレージ eMMC 64GB (microSDカードスロットあり) 画面サイズ 8インチ 画面解像度 1280 * 800 USB端子 micro-B x1 (充電通信兼用) 画面出力 microHDMI x1 通信 IEEE802.11ac, Bluetooth 4.0 OS なし はい。よくある安いWindowsタブレットって感じのスペックですね。\n実用は微妙だけどおもちゃとしてなら丁度いいくらいの。\nあと32bitUEFI、お前だけは絶対に許さない。\nOSは無しです。ストレージは完全消去済みでマザボにライセンスもなかったのでWindowsを使う場合はライセンスのみ別途用意が必要です。\n付属品完品で新品未使用(開封して消去済み)の状態で税込み2200円でした。\nいいおもちゃになりそうです。\n入れたOSと結果 # 32bit UEFI, 64bit CPUな環境で64bit版がインストールできるOSの中で個人的に好意を持っているOSを試しました。\n32bit UEFI非対応のUbuntuはカスなので滅んでいいよ(頑張ればできるらしいが)\nDebian 12 # 結論から書くと微妙でした。\nタッチパネルで使えそうなデスクトップ環境はGNOMEとKDEかなということで両方試しましたがDebian自体が微妙でしたね。\nデスクトップ環境はGNOMEの方がタッチパネル向けでした。\nDebianが微妙だった理由は以下の通り。\nバックライトが制御できない スリープが正常に動作しない オーディオドライバがない(non-freeなリポジトリを有効化すれば入る) 画面回転がズレてる(ファイル追加により修正可) カメラ使用不可(カーネルビルドすれば使えるかも) スリープ出来ないんじゃタブレットPCとしておしまいということでDebianは却下となりました。\nでもGNOMEの可能性は感じた。それは次に試すOSの話。\nFedora Workstation 38 # Windows以外だとこれが一番まともかもしれない。\n画面回転とカメラの問題はDebianと共通ですが、バックライトが問題なく動いてスリープできるのでタブレットとしては合格ラインかなと。\nあとはデフォルトのデスクトップ環境がGNOMEなのでスクリーンキーボードや画面自動回転ボタンなどが用意されててタブレット端末に優しい。\nまあこんな感じで今はFedoraに落ち着いています。\n画面自動回転の問題を修正する # GNOMEやKDEはiio-sensor-proxyというパッケージから得た値で画面を回転させています。\nメジャーな機種は物理的な画面の方向に合わせるための設定が書かれていますが、ドスパラのような日本国内のみに展開するハードは設定がありません。\nデフォルトの設定では90度ズレていたりするため、設定を追加して修正します。\n具体的には以下の手順を踏むだけです。\n最初にファイルを作成\nsudo nano /usr/lib/udev/hwdb.d/61-sensor-local.hwdb 以下を記述\nsensor:modalias:acpi:*:dmi:*:svnThirdwaveCorporation:* ACCEL_MOUNT_MATRIX=0, -1, 0; -1, 0, 0; 0, 0, 1 最後に設定を読み込んで再起動\nsudo systemd-hwdb update sudo reboot 今後試したいこと # 今後やりたいこととして、カメラを使えるようにしたいと思っています。\nCherryTrail世代のAtom系SoCはLinux用のドライバが少なく、カメラの機能に関してはカーネル側でデフォルトで無効にされています。\nカーネルをビルドすることでいけるかもしれないので一度試そうかと考えています。\nあとは他のOSも試しておきたいですね。\nAndroid-x86とかRemixOSとかChromeOSとか…\nあとは危ないやつだけどTiny10とか。\nまた試して分かったことがあればブログにするので気長に待ってもらえたらなと。\nおわりに # 2200円にしては遊びがいのあるコスパの良いおもちゃでした。\n何か使い道を見つけたいですがiPadもChromebookも持ってるのでおもちゃ以上に昇格することは無いんだろうなと。\n試してほしいOSとかあれば連絡ください。\nできれば普通じゃないOSでお願いします。\nそれでは、また次回。\n","date":"2023/09/09","externalUrl":null,"permalink":"/blog/2023/09/09/dospara-wintab/","section":"ブログ","summary":"Winタブ？よし通れ。ただしWindows、テメーはダメだ","title":"ドスパラのWinタブ(Windowsなし)で遊んだ話","type":"blog"},{"content":" はじめに # 病気って怖いよね。サンセットです。\n今回は例のアレにやられてたときの話です。\n辛かったこと # わかりやすく箇条書きにでもしておきましょうか。\n高熱出た(40℃超え) 声出せないくらい喉痛かった 咳酷かった 体痛かった こんな感じですかね。\n何もできなかったのでエアコンつけた部屋でずっと寝てました。\n飲食できたもの # 熱が酷い時期は飲めるものでないと喉を通らないです。\nある程度良くなると麺類などから食べられるようになりました。\n食べれたものは以下の通り\nゼリー飲料 麺類 スポーツドリンク お茶 ゼリー飲料のおかげで一番辛い時期はなんとか乗り切れました。\n備えあればなんとやら。\n後遺症 # 最初は倦怠感とか思考がぼやけたりとかしましたが数週間で全部治りました。\n個人差ですね。\nおわりに # 病気にはならないほうがいいよ。\nそれでは、また次回。\n","date":"2023/09/06","externalUrl":null,"permalink":"/blog/2023/09/06/covid-19-repo/","section":"ブログ","summary":"病気って怖いよね","title":"COVID-19にやられたときの話","type":"blog"},{"content":" はじめに # 人生で一度は行きたい場所や一度はしてみたいことなど、誰にもありますよね。\n倭国にいれば富士登山やお伊勢参りなどが代表例として上がるでしょうか。\n皆さんも行きましょう。真夏の極寒体験に。\n準備 # 富士山はルートがしっかりしてるとはいっても日本最高峰です。\nそれなりの装備で行かなければなりません。\n以下は登山に必要なものです。\n登山靴（トレッキングシューズ） 雨具（セパレートタイプの合羽など） 運動できる服装 防寒着、防寒具 登山用リュック 帽子 ヘッドライト 水（たくさん） おやつ（カロリー高めのもの） ごみ袋 現金（特に100円玉） モバイルバッテリー（とてもだいじ） タオル 杖（ストック） 登山計画や山小屋の確保なども必要なので必ずしておきましょう。\n弾丸登山は事故の元ですよ。\nさて前置きはここまでにして登山初心者のサンセットが何を持っていったかというと…\nワークマンの靴(1900円) ワークマンのレインウェア(4900円) 高校の部活のときの服(卓球部) 祖母からもらった登山用リュック よくわかんないけどリュックにつける雨具 小学生のときに被ってた帽子 楽天で評価高かったヘッドライト お茶と水をそれなりに カロリーメイト 音ゲーマーもびっくりな大量の100円玉 Anker PowerHouse 100 タオル3枚 祖母からもらった登山用の杖 こんな感じです。登山舐めてますねこれは。\n服装はワークマンがコスパ最強と聞いたのでそれで買いました。\n靴と服はこれで問題ないと思います。\n防寒着もレインウェアで十分かもしれないです。\n防寒具は今回持っていきませんでしたが、持っておいたほうが良いです。\n山頂では真夏でも気温が0~5℃で雨が降りやすく、風も20m/sくらいあるので凍えます。\nモバイルバッテリーはポータブル電源じゃなくても大丈夫です。重かったよあれ…\n現金は100円玉も重要ですが、山は物価が高いのでそれに耐えられる金額を持っていきましょう。\n一部山小屋はPayPayなどに対応してますが、無いものとして準備しておきましょう。\n日程 # 1日目 # 10:00 富士スバルライン5合目到着\nとても涼しいです。 11:00 出発 11:50 6合目安全指導センター通過 13:30 7合目通過\n天気悪くなって疲れてきた 16:00 8合目山小屋到着\nみてこの気温 2日目 # 2:00 8合目山小屋出発\n暗くて写真撮ってないよー\n3:00 8.5合目通過\n暗くて写真撮ってないよー2\n3:30 9合目通過\n暗くて写真撮ってないよー3\n4:30 山頂到着 5:00 下山開始\nご来光も見れたのでね 6:00 8合目通過\nいい感じ™な雲海が広がってた 8:30 5合目到着\nスタート地点と同じ\n完走した感想 # さて換装した乾燥ですが、\n外出た瞬間終わったわ\n天気悪すぎて進めない\n風強すぎてお亡くなり\n定期定期的に低体温\nといった感じで防寒対策がいかに重要か富士山にわからせられましたね。\n天気さえ良ければ誰でも山頂目指せるので皆も夏休みに登山、行こう！\nちなみに足の親指の爪は死にました。\nおわりに # さて今回は唐突に富士登山に行って制してきた話でした。\n初心者はインストラクター付きのツアーとかで行こうね。\n日本で一番高いところは行ったし次は東西南北の端に行けば良いのかな。\nそれでは、また次回。\n","date":"2023/07/29","externalUrl":null,"permalink":"/blog/2023/07/29/mt-fuji/","section":"ブログ","summary":"一度は行ってみたいと思う場所、日本最〇〇の1つ","title":"富士登山をしてきた話","type":"blog"},{"content":" はじめに # タスクバーは左揃えで結合はしない、スタートメニューはもちろん多用する。\nこんな旧式Windows難民には11は辛すぎる。\nじゃあServerにしちゃおっか。という話。\n前回の自作PCを組んだ話の続きかも。\n最近のWindows、酷い # 最近のWindowsについてどう思いますか？\nMSが最後のOSとか自信満々に言ってたWindows10はいつの間にかサポート終了が近づいてきて、今までのWindowsとは違いすぎるWindows11とかいう10の二次創作が出回っているというカオスな現在。\nWindows11も改善は進んでいるらしいですが、Copilotとか広告とかが増えて重くなる一方…\nWindows10難民になりそうな私は考えました。「やっべどうしよ…」と。\nWindows10ベースでちゃんとWindows10なデザインのOSを使う方法はいくつかあります。\n次はそれを紹介していきます。\nWindows11を回避して10系を使う方法 # 通常のWindows10は2025年10月14日にサポート終了します。通常のはね。\n通常ではないWindows10やWindows10ベースのWindowsServerであればどうでしょうか。\n以下の表にまとめました。\nOS名 エディション サポート期限 Windows 10 Home, Pro, Pro for Workstations など 2025年10月14日 Windows 10 Enterprise LTSC 2019 2029年1月9日 Windows 10 Enterprise LTSC 2021 2027年1月12日 Windows Server 2016 Standard, Datacenter など 2027年1月12日 Windows Server 2019 Standard, Datacenter など 2029年1月9日 Windows Server 2022 Standard, Datacenter など 2031年10月14日 こんな感じでWindows11の後継が出そうな時期までサポートがあるものが意外と存在しています。\nLTSCであればストアが無いくらいであとは普通のWindows10に近いので入手できればいい感じかもしれません。\nストアも無理やり入れることはできますしね。\nまあ今回はLTSC使わないんですけど。\nWindows Server 2022 Datacenterを採用した理由 # 見出しの通りですが、今回はWindows11を回避するためにWindowsServerを選びました。\n理由は以下の通り。\nサポートが長い(2031年10月14日まで) ベースが最近のWindows10(ビルド番号的には10と11の間) サーバー用なので何も入ってない(綺麗な環境) Azure for Studentsでライセンス無料 勝手に再起動されない 最近のWindowsにある余計なものが入っていたり勝手に再起動されたりという問題を回避するのにちょうどいい感じになっているのではないでしょうか。\nもちろんサーバー用OSなので、通常のPCとして使うには不便な点もいくつかあります。\nWindowsHelloが使えなかったり一部ソフトがインストールできなかったりなど…\n今回はそれらのデメリットよりもメリットの方が大きいと判断したためWindowsServerを選んだ感じです。\nStandardではなくDatacenterを選んだ理由は…特になし！強そうだから！\nWindows Server 2022を常用するためにしたこと # WindowsServerはサーバー用のOSなので初期設定のままではPCとして使うには不便な点が多いです。\n設定をWindows10に近い状態に変更し、必要なものをインストールする必要があります。\nここでは私がWindowsServer2022を常用するためにしたことを書いていきます。\nパスワード制限の無効化 # WindowsServerでは強力なパスワードと定期的な変更が求められるのですが、PCとして使う場合は邪魔なので無効化してしまいます。\nローカルセキュリティポリシーの設定から有効期間や複雑さの要件などを無効にしておきます。\n以下のスクショのようになっていれば大丈夫です。\nAdministratorを無効化 # Windows10ではデフォルトで無効化されているAdministratorですが、WindowsServerではデフォルトのアカウントとして存在しています。\nこのままでは権限の問題などが発生するため、コンピューターの管理からAdministratorsグループに所属させたユーザーを作成し、それを使用するようにします。\nWindows10の管理者権限を持つオフラインユーザーと同じような感じですかね。\nユーザーを作成したらAdministratorは無効化してしまいましょう。\n以下のスクショのようになっていれば大丈夫です。\n音声の有効化 # WindowsServerはサーバー用OSなのでデフォルトのままでは音が出ません。\nPCとして使っていくうえで音が出ないのは致命的なので出るようにしていきます。\nコンピューターの管理からサービスの管理を出し、Windows Audioを自動で起動するようにし、その場で起動もしておきます。 以下のスクショのようになっていれば大丈夫です。\nWiFiの有効化 # WindowsServerはサーバー用OSなのでWiFi機能もありません。\nWiFiを使用したい場合は以下のコマンドを管理者権限のPowerShellで実行します。\nInstall-WindowsFeature -Name Wireless-Networking ここで一度再起動してもう一度管理者権限のPowerShellを立ち上げて以下を実行。\nSet-Service WlanSvc –startuptype automatic –passthru Start-Service WlanSvc –PassThru あとはアダプタが有効化されていればWindows10のようにWiFiが使えるはずです。\nGUIをいい感じ™に # WindowsServerはサーバー用OSなのでGUIを有効にしてあってもアニメーションなどがほぼ無い軽量な状態になっています。\nこれで使いたい人はこれで問題ないですが、Windows10と同じ状態にしたい場合は設定で変えておきましょう。\nシステムの詳細設定からパフォーマンスの設定を変更します。\nスクショの無効になってる部分以外全部有効にしておけばWindows10と同じになるはずです。\nサービスの優先度を変更 # WindowsServerはサーバー用OSなのでバックグラウンドプロセスが優先的に処理されます。\n普通のPCとして使う場合はフォアグラウンドのプロセスにリソースを当てたいことが多いので設定で変えておきましょう。\nシステムの詳細設定からパフォーマンスの設定を変更します。\nスクショのようにプログラムにチェックを入れておきます。\nメモリ圧縮の有効化 # メモリを効率良く使うために有効化しておきます。\n管理者権限のPowerShellで以下のコマンドを実行します。\nEnable-MMAgent -MemoryCompression サインイン時のCtrl+Alt+Del無効化 # サインイン時に毎回Ctrl+Alt+Delを要求されると面倒なので設定で無効化してしまいましょう。\nローカルセキュリティポリシーの設定から無効にできます。\n以下のスクショのようになっていれば大丈夫です。\nシャットダウン追跡の無効化 # シャットダウン時や電源切断時に毎回理由を聞いてくるのはうざいので無効化してしまいましょう。\nファイル名を指定して実行からgpedit.mscを開いて、以下のスクショの場所にある設定を無効にします。\nタスクマネージャーにディスク使用率を追加 # WindowsServerのタスクマネージャーはデフォルトではとても情報が少なくなっています。\nディスク使用率はコマンドで有効化できるのでしておきましょう。\n管理者権限のPowerShellまたはコマンドプロンプトで以下のコマンドを実行します。\ndiskperf -y Windowsフォトビューアーを有効化\u0026amp;規定に # WindowsServerはWindows10以降にプリインストールされているフォトが存在しません。\n後述するUWPの自力インストールで入れても問題ありませんが、私はWindowsフォトビューアーの方が好きなのでこれを有効化して規定のアプリに設定します。\nこのサイトの方法が参考になるのでいい感じ™にやってください。\nwinget導入 # Microsoftが開発しているWindows用のパッケージマネージャーであるwingetを導入します。\nscoopやchocolateyなどでも大丈夫です。\nパッケージマネージャーがいらない人は入れなくてもいいです。\nwingetを導入するには以下のコマンドをPowerShellで実行します\nSet-PSRepository -Name \u0026#39;PSGallery\u0026#39; -InstallationPolicy Trusted Install-Script -Name winget-install -Force winget-install.ps1 再起動したら使えるようになっているはずです。\nUWP自力インストール # WindowsServerにはWindows7に搭載されていたもののような古くてボタンの小さい電卓がプリインストールされています。\n電卓に限らず、Windows10にプリインストールされているUWPアプリの方が便利なことが多いため、必要なものを手動でインストールしていきます。気合いで。\n手順は以下の通りです。\nhttps://store.rg-adguard.net/にアクセスする インストールしたいアプリのURLを入れる 出たリンクのうちアーキテクチャの一致する依存関係と本体をダウンロードする インストールする ダウンロードのときは以下のコマンドを、\nirm \u0026#34;http://example.url\u0026#34; -o filename.appx インストールのときは以下のコマンドを実行します。\nAdd-AppxPackage .\\filename.appx これでストアのUWPアプリをインストールできるはずです。\nやっても無駄だったこと # LTSCにMicrosoft Storeを無理やりインストールするスクリプトをServer2022に対して実行したところ、ストア自体はインストールできたがストアからアプリのインストールができないという状況になった。\nアプリが入れれないストアなんて存在価値は無い！\nWindows Server 2022でできること、できないこと # WindowsServerはサーバー用OSなので無効化されていたりしてできないこともいくつかあります。\nここでは私が確認できた範囲のことを書いていきます。\nできること # できないこと以外全部\nできないこと # Windows Helloによるサインイン Microsoftアカウントによるサインイン 一部ソフトのインストール(AMDのドライバやCanonのツールなど) 有線のOculus Link ストアがソースになっているアプリのインストール(winget) Xbox系のサインイン などなど… おわりに # 今回はWindows Server 2022をPC用OSとして使う話を書きました。\n学生でWindows Serverのライセンスを入手できる人は遊んでみては？\nそれでは、また次回。\n参考文献 # Windows Server 2019を通常のWindows 10のようにして使う 【Windows Server 2019/2016】ワイヤレス接続　Wi-Fiを有効にする方法【Tips】 【図解】Windows Server 2019のタスクマネージャーにディスク使用率を表示させる方法 【Windows10】フォトビューアーを既定のアプリとして使うためにレジストリで有効化する方法 Installing Appx Without Microsoft Store ","date":"2023/07/12","externalUrl":null,"permalink":"/blog/2023/07/12/server2022-in-pc/","section":"ブログ","summary":"余計な機能の無い最新のWindowsください","title":"Windows 11にしたくなかったのでWindows Server 2022に乗り換えた話","type":"blog"},{"content":" はじめに # マザボのUSB3端子がもげたりCPUの初期不良を引いたりと波乱続きで使われてきた自作PC。\nついに新しくなります。\nなんでこのタイミングで…？ # 正直性能が足りないということはメモリ以外ありませんでした。\nただMinecraftが重かったりAI画像生成が重かったりともう少し快適さが欲しいような状況でもありました。\nメモリとグラボを変えればまだ戦えるな…と思ったりもしました。\nではなぜ今全部買ったのか。\nRTX4000シリーズ不人気による価格低下と歴史的なSSD, RAMの価格低下が一番の要因です。あとQoo10のセール。\nおかげでなかなか安くいい感じ™の構成で組めたので次は構成を紹介していきます。\n金額は合計で24万円くらいでした。\n旧PCと新PCの構成の比較 # 表を置いておくだけで理解してくれると思うので表だけ載せておきます（\n分類 旧PC 新PC CPU AMD Ryzen 5 3600X AMD Ryzen 5 7600X CPUクーラー サイズ 虎徹MarkⅡ Deepcool AK400 マザーボード ASRock X570 Steel Legend ASRock B650E Steel Legend WiFi RAM G.Skill Trident Z Neo DDR4-3600 16GB x2 G.Skill Trident Z5 Neo DDR5-6000 32GB x2 GPU MSI GeForce GTX 1070 ARMOR 8G OC GIGABYTE GeForce RTX 4070 WINDFORCE OC 12G SSD Samsung 960 EVO 250GB Samsung 970 EVO Plus 500GB HDD Western Digital Blue 3TB Western Digital Blue 4TB ケース Thermaltake Versa H26 Thermaltake Versa H26 電源 Silver Stone SST-ET750-G Silver Stone SST-DA850-G OS Microsoft Windows 10 Pro Microsoft Windows Server 2022 Datacenter CPUはシングルスレッド性能が高くて発熱の少ないRyzen5を使用し、空冷で冷やす。\nマザボは安定性と耐久性重視でRAMも安定性と性能を重視。\nGPUは8pin x1で性能も高い*TX **70を採用。\nSSDとHDDは個人的に信頼してるメーカーのものを採用。\nケースは5インチベイのある安定のVersa H26。\n電源も個人的に信頼してるメーカーのものを採用。\nOSはWindows11にしたくないので10からServer2022に。\nといった感じで面白みもなくゲーミング用途でもないただの自作PCになっています。\nこれから自作を組む人へ # 今(2023年夏)はとても時期が良いので迷ってるなら組もう。\nRyzen 7 5700XとRTX 3060(またはTi)で組めばその辺のBTOより最低でも2,3万円くらいは安く組めます。\n両方とも1世代前ではあるけど十分過ぎるくらいのものなので心配することはないぞ。\nさあ、あなたも自作の世界へ。\nおわりに # 今回は新PCのハードウェア面について書いてきました。\n今回選んだOSのWindows Server 2022 Datacenterのことなどは次回書こうと思います。\nそれでは、また次回。\n","date":"2023/07/06","externalUrl":null,"permalink":"/blog/2023/07/06/new-pc/","section":"ブログ","summary":"安定して空冷で使えて光学ドライブを搭載したそこそこの性能のPC、これが一番良い","title":"新しいPCを組んだ話","type":"blog"},{"content":" はじめに # ドメインを取得してクソみたいなウェブサイトを作ってから何ヶ月たったでしょうか。\nついにクソサイトも比較的まともなサイトになりますよ。\n今回はそんなお話です。\nなんでサイト新しくしたの？ # 情報を載せるだけなら旧サイトでも十分でした。載せるだけなら。\nこれを公開して誰かに読んでもらったりするには不十分な要素が多かったのです。\nそして手書きHTML職人による魂のこもった制作物にも限界が来ていました。\n最後のとどめにアドカレなどの企画でブログが欲しいとなっていたため、サイトの作り直しを脳内閣議決定したという感じになります。\nどうやって作ったの？ # 今まで手書きHTML職人をしてきた人がどうやって突然こんな綺麗なサイトを作ったのか、気になる人も多いでしょう。\n9割5分8厘の人は察しがついていると思いますが、Hugoを使ってサイトを作っています。\nテーマはCongoを使用しています。これがなかなかシンプルでかっこいい。\nあとはこう、サンプルとか見ながらいい感じ™になるように弄った感じですかね。\n(追記) 現在はBlowfishというテーマに乗り換えました。こっちのほうが多機能ですが、ちょっとビルドが重かったりします。\n内容と公開頻度は？ # 内容は無いようです…と言いたいところですが、ちゃんと書いていきます。\n現時点で書きたい記事が2つほどあるのでぼちぼち書いていきますよ。\nただこのサイトは広告を置いているわけではないので更新ペースは遅いと思います。 サンセットのモチベーションに期待しましょう。\nおわりに # 初投稿ということで今回はこの辺にしておきます。\n次回はパソコンを組んだ話を書こうと思います。\nそれでは、また次回。\n","date":"2023/07/01","externalUrl":null,"permalink":"/blog/2023/07/01/new-site/","section":"ブログ","summary":"クソサイトのつもりがまともなブログになってきました","title":"ウェブサイトを新しくした話","type":"blog"},{"content":"\n最近の投稿 # ","date":"2023/07/01","externalUrl":null,"permalink":"/blog/","section":"ブログ","summary":"","title":"ブログ","type":"blog"},{"content":"","date":"2023/07/01","externalUrl":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":"","date":"2023/07/01","externalUrl":null,"permalink":"/categories/about/","section":"Categories","summary":"","title":"About","type":"categories"},{"content":"皆様からの支援(または嫌がらせ)を受けたらここに追記していきます。\n送られてきたもの # 爪楊枝1kg(約7000本) x5箱 爪楊枝個包装1000本 x3箱 竹箸100膳 しるこサンド x6袋 ブラックサンダーのめっちゃ大きい袋 綾鷹 525ml x24本(箱) シーチキン 12缶(箱) スピリタス 500ml 干し芋 メイド服 びっくりチキン x2体 Anker Soundcore Anker PowerWave BUFFALO製USBメモリ32GB x3本 Team製USBメモリ 64GB 巨大Enterキークッション 何か送り付けたい場合 # 以下のリンクからサンセットに何かを買ってあげることができます。支援お待ちしてます！\nほしいものリスト：amazon.co.jp 干し芋のリスト：amazon.co.jp ","date":"2023/07/01","externalUrl":null,"permalink":"/about/wishlist/","section":"サンセットについて","summary":"","title":"ほしいものリストで頂いたもの(送りつけられたもの)","type":"about"},{"content":"どこに需要があるのかわからないような制作物置き場の予定。\nMahjongKeyboard：麻雀牌を入力するためだけのソフトウェアキーボード Location-game：位置から緯度経度を当てたり緯度経度から位置を当てたりするゲーム GalaFli：テンキーだけでキーボード入力ができるようになるWindows常駐ソフト ","date":"2023/07/01","externalUrl":null,"permalink":"/about/product/","section":"サンセットについて","summary":"","title":"制作物とか","type":"about"},{"content":"持ってる端末とかPCを書いていくよ。\nPC # デスクトップ：自作 ノート1：MacBook Pro 14inch M3 2023 ノート2：MSI Modern 14 スマホ # CMF by Nothing Phone 1 iPhone SE(第3世代) Mode1 RETRO Ⅱ タブレット # iPad Air(第5世代) 検証用環境 # iPhone SE(第2世代) LG Nexus 5 ASUS Nexus 7 2013 SONY Xperia Z3 Compact SO-02G SONY Xperia Z5 Premium SO-03H Fujitsu らくらくスマートフォンme F-03K Fujitsu arrows Be F-04K Fujitsu arrows Be3 F-02L SHARP AQUOS Xx3 mini 603SH SHARP AQUOS sense SH-01K Motorola moto g31 OPPO A73 Rakuten Hand UMIDIGI F1 Play HUAWEI P30 lite Samsung Galaxy S20 5G SC-51Aa Google Pixel 4a Nothing Phone(1) Lenovo IdeaPad Duet Chromebook Dospara Diginnos DG-D08IW2SL Fujitsu ARROWS Tab Q508/SE HP EliteBook 2560p Acer Aspire one SOTEC AFiNA AG353 NEC LaVie NX LW23C/52 NEC LaVie E LE150/S1W Lenovo B50-70 RaspberryPi 3 Model B RaspberryPi 3 Model B+ LIVA-C0-2G-64G-W x2 Shuttle DH170 HP Z420 Workstation サーバー # ASRock DeskMini X300 Synology DS220j ","date":"2023/07/01","externalUrl":null,"permalink":"/about/device/","section":"サンセットについて","summary":"","title":"所持端末など","type":"about"},{"content":" 個人を特定できない程度の情報を書いていきたい。 自己紹介 # はじめましての方ははじめまして。そうでない方はこんにちは。サンセット(sunset)です。\nプログラミングをしたり動画投稿や配信をしたりイラスト制作をしたり商品レビューをしたり自作PCを組んだり何もしなかったりと幅広く活動しています。\nFascode Networkという変態雑技集団に所属し、ブログを書いたりLinuxをいじったりいじらなかったりしながらサーバーの保守をしています。\n普段はTwitterやMisskeyでクソみたいな投稿を垂れ流しています。メンションやDMはお気軽にどうぞ。\n2002年9月16日三重県四日市市生まれ。桑名市在住。\n現在は専門学校に通いながら大学の課程も履修している。就活つらい。\n趣味はPC、スマホ弄り、Minecraft、東方など。\n活動内容 # いろいろなことに手を出したり出さなかったりしているため活動内容はとても広く浅くなっている。\nプログラミング(アプリ開発) イラスト制作 配信・動画投稿(サボりがち) サーバー構築・運用 自作PC ガジェット購入・レビュー 他にも多数… SNSアカウントと連絡先 # Twitter @sunset09160306 Instagram @sunset09160306 Threads @sunset09160306@threads.net Misskey(メイン) @sunset@mi.sunset0916.net Misskey(Submarin) @sunset@submarin.online Misskey(io) @sunset@misskey.io GitHub sunset0916 LINE サンセット Discord @sunset0916 e-mail sunset0916@fascode.net 使用環境・所持端末 # こちらでまとめていく予定\n使用言語(使えるとは言ってない) # VisualBasic.NET：Windows向けの需要のないソフトの開発ができる程度 C#：Windows向けの以下略 Java：Android向けの需要のないアプリの開発ができる程度 Python：コマンドラインベースのTwitter/Misskey同時投稿スクリプトが作れる程度 HTML：このサイトが作れる程度 CSS：このサイトが作れる程度 JavaScript：クソゲーが作れる程度 C：何もできない 制作物はこちらから。\n使用ソフト # IDE・エディタ # Visual Studio 2022 Visual Studio Code Eclipse Android Studio グラフィック # CLIP STUDIO PAINT PRO GIMP Inkscape ゆっくりMovieMaker4 AviUtl 支援する # 爪楊枝とか送りつけるのはこちらから。\nレターパックで現金送れは詐欺なので気をつけましょう。\n今までに頂いたものはこちら\nほしいものリスト：amazon.co.jp 干し芋のリスト：amazon.co.jp Kyash：sunset0916 所属団体について # サンセットはFascodeNetworkというソフトウェア開発などを行うネット上のグループに所属しています。\nFascodeNetworkはLinuxディストリビューションの開発やブラウザの開発、公式キャラクター「水瀬玲音」による情報発信やグッズ展開などをしている学生主体の団体です。\nAlterLinuxやSereneLinux、FlastBrowserの開発が現在の主な活動内容になっています。\nFascodeNetworkは変態開発者の集まりなことから、変態雑技集団とも呼ばれています。\nFascodeNetworkのホームページはこちら\nこのサイトについて # このサイトはHugoとテーマのBlowfishで制作し、GitHub Pagesを使用して公開されています。\nソースコードはこちらからどうぞ。\n相互リンクについて # サンセットのウェブサイトはリンクフリーです。\nバナーは以下の画像(https://sunset0916.net/img/banner.png)をお使い下さい。\n関連記事 # ","date":"2023/07/01","externalUrl":null,"permalink":"/about/","section":"サンセットについて","summary":"","title":"サンセットについて","type":"about"},{"content":"さんせすきーの説明というか利用規約というかそういう感じのやつ\nさんせすきーはサンセットの独裁国家です。更新のタイミングなどはサンセットが勝手に決めます。インスタンスを落とす際の通知はします。 法に触れたり他ユーザー・他インスタンスに迷惑をかけたりする行動があれば容赦なく凍結します。警察のお世話になりたくないしインスタンス閉鎖もしたくないので。大判焼き関連だけは執行猶予。 さんせすきーでは、小麦粉に卵を加えて溶いた生地を型のある鉄板に流し込み、その上にあんこを載せ、さらに生地を流して焼いた和菓子のことは\u0026quot;大判焼き\u0026ldquo;と呼びます。 センシティブな画像(3次元)は投稿を控えてください。閲覧注意やダイレクト投稿だろうと全部サンセットが見れます。というか見たくないからやめて。えっちなイラストはCWつければいいよ。 さんせすきーはFediverseの一部です。インスタンス内での会話は外に出さないなど、連合先に迷惑をかけない運用をしてください。 推測が容易なパスワードは控え、2段階認証などを設定しましょう。乗っ取り対応面倒なので。 反社会的勢力と関わりのある者及びEU加盟国とイギリスからの登録を禁止します。 改正プロバイダ責任制限法の発信者情報開示請求に対応するためにIPアドレスを収集します。収集した情報は開示請求または管理者が必要と判断した場合を除いて一切使用しません。 さんせすきーはオープンソースのMisskeyというソフトウェアを使用しています。Misskeyの支援をお願いします。(任意) さんせすきーはサンセットが自宅鯖で無償で提供しています。支援したい人は申し出てください。(任意) ","date":"2023/07/01","externalUrl":null,"permalink":"/sunsesskey-policy/","section":"サンセットのウェブサイト","summary":"","title":"さんせすきーの利用規約のようなもの","type":"page"},{"content":" このサイト、うるさいとｗｗｗ 現在28個\nサンセットさん窃盗に遭う カタールのことを語ーる 音ゲーやろっと。うわっ音ズレが訪れた… ここだけフォントが違うらしい。ふぉんとぉ？ 総裁が惣菜の濃い味を米で相殺 スイス製のこの椅子、安いっすね 今日はマスカット狩りだ。まぁスカッと晴れたもんだねぇ このイヤホンが10万？嘘だろ。いや本当だって 食糧難らしいので他国へタコ食えと発信する サイゼ飯が最善手 レモンの入れもんが取れんもん 読みやすい文かつ分割されている お香を置こうっと トレンドが取れんど C言語って惜しい言語だよな 今日買ったカッターのおかげで助かったー。よかったね 氷塊の評価良い パッケージ更新できなくて病む(yum) とろくさい六歳、転けて泥臭い でかいケツで解決 ドメイン移管、一瞬では行かんので遺憾の意を表明せないかん トナーを買わんとなー 香辛料サブスクの更新料 そうやな、宗谷岬行こかな 手紙を繰り返し送り返します 熊野古道での熊の行動 DELLの新モデルも出るとか 仮想化されたサーバーを貸そうか？ ギャグ不足の方は以下のうるサイトへ\nMidraのサイト L1n4r1Art はやおのぺーじ るちかどっとねっと。 cffn.pw/r(リンク先お亡くなり) かがみーむ ギャグが足りている方は以下のうるさくないサイトへ\nsouhait.me これより下に内容は無いようです。\n","date":"2023/07/01","externalUrl":null,"permalink":"/gyagu/","section":"サンセットのウェブサイト","summary":"","title":"ギャグ","type":"page"}]